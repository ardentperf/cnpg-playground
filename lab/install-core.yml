---
- name: Ubuntu 25.04 Desktop Setup - Core Installation - CNPG Lab
  hosts: all
  gather_facts: yes
  vars:
    # Proxy configuration - set these variables if proxy is needed
    use_proxy: false
    proxy_ip: ""
    proxy_port: ""
    # User configuration
    target_user: "{{ ansible_user | default(ansible_env.USER) }}"
    target_user_home: "{{ ansible_user_dir | default('/home/' + ansible_env.USER) }}"
    # Password configuration
    set_user_password: false
    user_password: ""
    # Project configuration
    script_dir: "{{ playbook_dir }}/.."
    homepage_url: "https://github.com/ardentperf/cnpg-playground/blob/tmp-work/lab/EXERCISES.md"

  tasks:
    - name: Display proxy configuration
      debug:
        msg: "use_proxy={{ use_proxy }}, proxy_ip={{ proxy_ip }}, proxy_port={{ proxy_port }}"

    - name: Display user configuration
      debug:
        msg: "target_user={{ target_user }}, target_user_home={{ target_user_home }}"

    - name: Display password configuration
      debug:
        msg: "set_user_password={{ set_user_password }}, user_password={% if user_password != '' %}SET{% else %}NOT SET{% endif %}"

    - name: Display project configuration
      debug:
        msg: "script_dir={{ script_dir }}, homepage_url={{ homepage_url }}"

    - name: Create Ansible remote temp directory with proper permissions
      file:
        path: "{{ target_user_home }}/.ansible/tmp"
        state: directory
        mode: '0755'

    - name: Set user password if requested
      user:
        name: "{{ target_user }}"
        password: "{{ user_password | password_hash('sha512') }}"
      when: set_user_password and user_password != ""
      become: yes

    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600
      become: yes

    - name: Upgrade all packages (less than 5 minutes on fast internet)
      apt:
        upgrade: yes
      become: yes

    - name: Install all required packages (less than 15 minutes on fast internet)
      apt:
        name:
          - cinnamon-desktop-environment
          - xrdp
          - docker.io
          - nix-bin
        state: present
      register: package_install
      become: yes

    - name: Create flag file after successful Cinnamon installation
      file:
        path: /etc/cinnamon-desktop-installed-by-cnpg-lab
        state: touch
        mode: '0644'
      when: package_install.changed
      become: yes

    - name: Create Docker proxy configuration directory
      file:
        path: /etc/systemd/system/docker.service.d
        state: directory
        mode: '0755'
      when: use_proxy
      become: yes

    - name: Configure Docker proxy settings
      template:
        src: docker-proxy.conf.j2
        dest: /etc/systemd/system/docker.service.d/http-proxy.conf
        mode: '0644'
      when: use_proxy
      notify: restart docker
      become: yes

    - name: Add user to docker group
      user:
        name: "{{ target_user }}"
        groups: docker
        append: yes
      become: yes

    - name: Add experimental features to Nix configuration
      lineinfile:
        path: /etc/nix/nix.conf
        line: "experimental-features = nix-command flakes"
        state: present
      become: yes

    - name: Add user to nix-users group
      user:
        name: "{{ target_user }}"
        groups: nix-users
        append: yes
      become: yes

    - name: Configure file watch limits for kind
      copy:
        dest: /etc/sysctl.d/99-inotify.conf
        content: |
          fs.inotify.max_user_watches=524288
          fs.inotify.max_user_instances=512
        mode: '0644'
      become: yes

    - name: Apply sysctl changes
      sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        state: present
        reload: yes
      loop:
        - { name: "fs.inotify.max_user_watches", value: "524288" }
        - { name: "fs.inotify.max_user_instances", value: "512" }
      become: yes

    - name: Create user application directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "{{ target_user_home }}/.local/share/applications"
        - "{{ target_user_home }}/.config/autostart"

    - name: Create Firefox desktop shortcuts
      file:
        src: /var/lib/snapd/desktop/applications/firefox_firefox.desktop
        dest: "{{ item }}"
        state: link
      loop:
        - "{{ target_user_home }}/.local/share/applications/firefox.desktop"
        - "{{ target_user_home }}/.config/autostart/firefox.desktop"
      ignore_errors: yes

    - name: Create Firefox policies directory
      file:
        path: /etc/firefox/policies
        state: directory
        mode: '0755'
      become: yes

    - name: Configure Firefox policies (system-wide)
      template:
        src: firefox-policies.json.j2
        dest: /etc/firefox/policies/policies.json
        mode: '0644'
      become: yes

    - name: Create configure-desktop script
      template:
        src: configure-desktop.sh.j2
        dest: "{{ target_user_home }}/configure-desktop.sh"
        mode: '0755'

    - name: Create autostart desktop entry
      template:
        src: configure-desktop.desktop.j2
        dest: "{{ target_user_home }}/.config/autostart/configure-desktop.desktop"
        mode: '0644'

    - name: Configure bashrc for KUBECONFIG and nix development environment
      blockinfile:
        path: "{{ target_user_home }}/.bashrc"
        mode: '0644'
        marker: "# {mark} ANSIBLE MANAGED BLOCK - cnpg-lab configuration"
        block: "{{ lookup('template', 'bashrc.j2') }}"

  handlers:
    - name: restart docker
      systemd:
        name: docker
        state: restarted
        daemon_reload: yes
      become: yes