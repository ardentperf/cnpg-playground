################ Kubernetes job that runs Jepsen against the CNPG cluster ################
#
# The configuration below (500 keys with uniform distribution, 250 writes per key and 50 concurrent writers)
# is optimized for throughput to detect any cases where data is lost during cluster reconfigurations.
#
# The duration of the test run is determined by --time-limit (seconds) and --test-count (loops).
#
# The docker container image is built from https://github.com/ardentperf/jepsenpg/tree/work (the "work" branch)
#
apiVersion: batch/v1
kind: Job
metadata:
  name: jepsenpg
spec:
  backoffLimit: 0
  ttlSecondsAfterFinished: 3600
  template:
    spec:
      nodeSelector: {node-role.kubernetes.io/app: ""}
      restartPolicy: Never
      containers:
        - name: jepsenpg
          image: ardentperf/jepsenpg:latest
          envFrom:
          - secretRef: {name: pg-eu-app}
          - secretRef: {name: minio-eu}
          command: ["sh","-exc"]
          args:
            - |
              # show the current timestamp (useful to know when the test started)
              date
              cd /jepsenpg

              # download the minio client and set up an alias for minio-eu
              MC_ARCH=$(case $(uname -m) in x86_64) echo linux-amd64 ;; aarch64|arm64) echo linux-arm64 ;; esac)
              curl -fsSL https://dl.min.io/client/mc/release/$MC_ARCH/mc -o mc && chmod +x mc && mv mc /usr/local/bin/mc
              mc alias set cnpgobj http://minio-eu:9000 $ACCESS_KEY_ID $ACCESS_SECRET_KEY
              mc mb --ignore-existing cnpgobj/jepsenpg

              # run the Jepsen test
              lein run test-all -w append --isolation read-committed --nemesis none --no-ssh \
                  --key-count 500 \
                  --max-writes-per-key 100 \
                  --max-txn-length 4 \
                  --key-dist uniform \
                  --concurrency 50 \
                  --rate 500 \
                  --time-limit 600 \
                  --test-count 1 \
                  --existing-postgres --node pg-eu-rw.default.svc.cluster.local --postgres-user app --postgres-password $password >jepsen.out || true

              # tar up the results and upload to minio-eu
              tar czvf store-$(date +%Y%m%d-%H%M).tgz store/
              mc cp store-*.tgz cnpgobj/jepsenpg/

              # print the results to the terminal and the termination log
              grep -A5 anomaly-types jepsen.out | tee -a /dev/termination-log || true
              tail -4 jepsen.out | tee -a /dev/termination-log
